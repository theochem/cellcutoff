env:
  matrix:
  - MYCONDAPY=2.7
  #- MYCONDAPY=3.5
  #- MYCONDAPY=3.6
  global:
    - PROJECTNAME=cellcutoff
    - PYDIR=python-${PROJECTNAME}
    - CCP_CONDA_PKG=${PROJECTNAME}
    - PY_CONDA_PKG=python-${PROJECTNAME}
    - GITHUB_REPO_NAME=theochem/cellcutoff

# Do not use Travis Python to save some time.
language: generic
os:
  - linux
#  - osx
osx_image: xcode6.4
dist: trusty
sudo: false

branches:
  only:
    - master
    - /^[0-9]+\.[0-9]+(\.[0-9]+)?([ab][0-9]+)?$/


install:
# Get miniconda. Take the right version, so re-installing python is only needed for 3.5.
- if [[ "$MYCONDAPY" == "2.7" ]]; then
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda2-latest-MacOSX-x86_64.sh -O miniconda.sh;
    fi;
  else
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh;
    fi;
  fi
- bash miniconda.sh -b -p $HOME/miniconda
- source $HOME/miniconda/bin/activate
- hash -r

# Configure conda and get a few essentials
- conda config --set always_yes yes
- conda update -q conda
# Get the right python version for building. This only does something for 3.5.
# Install extra package needed to make things work. Most things can be listed as
# dependencies on metal.yaml and setup.py, unless setup.py already imports them.
# Install conda tools for packaging and uploading
- conda install python=${MYCONDAPY} numpy cython conda-build anaconda-client nose
# Install more recent stuff with pip
- pip install codecov coverage
# Show conda info for debugging
- conda info -a

script:
# --- CPP ---
# Make a debug build in-place, for testing with coverage
- (mkdir debug;
  cd debug;
  cmake cmake -DCMAKE_BUILD_TYPE=debug ..;
  make;
  ./${PROJECTNAME}/tests/test_${PROJECTNAME})

# Build the conda package
- git fetch origin --tags
- conda build -q tools/conda.recipe

# Install Conda package
- conda install --use-local ${CCP_CONDA_PKG}

# Run the tests
- ${CONDA_PREFIX}/libexec/${PROJECTNAME}/test_${PROJECTNAME}

# TODO: make source package for github

# --- PYTHON ---

# Build source package, should work too and needed for deployment to Github and
# PyPI.
- (cd ${PYDIR}; python setup.py sdist)

# Build extension in-place, needed to enable coverage debug options that we do not want in
# the installed version
- 'echo | gcc -E -Wp,-v -'
- 'echo | cpp -xc++ -Wp,-v'
- (cd ${PYDIR}; python setup.py build_ext -i --define CYTHON_TRACE_NOGIL)

# Run the unit tests with coverage, from the in-place build
- (cd ${PYDIR}; nosetests ${PROJECTNAME} -v --detailed-errors --with-coverage --cover-package=${PROJECTNAME} --cover-ests --cover-erase --cover-inclusive --cover-branches --cover-xml)

# Build the conda package
- (cd ${PYDIR}; conda build -q tools/conda.recipe)

# Install Conda package
- conda install --use-local ${PY_CONDA_PKG}

# Run tests out of source tree, to make sure that installed version is tested.
- (cd; nosetests nosetests ${PROJECTNAME} -v --detailed-errors)

#after_success:
# Upload the coverage analysis
- codecov
